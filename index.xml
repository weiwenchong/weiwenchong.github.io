<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wenchong Blog</title>
    <link>http://weiwenchong.github.io/</link>
    <description>Recent content on Wenchong Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Sep 2021 20:50:00 +0000</lastBuildDate><atom:link href="http://weiwenchong.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang基础库 sync.Pool</title>
      <link>http://weiwenchong.github.io/post/sync_pool/</link>
      <pubDate>Tue, 14 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/sync_pool/</guid>
      <description>golang 基础库sync.Pool 使用姿势 认识下sync.Pool type Pool struct { ... New func() interface{} } func (p *Pool) Put(x interface{}) { ... } func (p *Pool) Get() interface{} { ... } sync.Pool暴露了以上三个</description>
    </item>
    
    <item>
      <title>go服务不能准确识别docker的CPU数量</title>
      <link>http://weiwenchong.github.io/post/go%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%87%86%E7%A1%AE%E8%AF%86%E5%88%ABdocker%E7%9A%84cpu%E6%95%B0%E9%87%8F/</link>
      <pubDate>Fri, 10 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/go%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%87%86%E7%A1%AE%E8%AF%86%E5%88%ABdocker%E7%9A%84cpu%E6%95%B0%E9%87%8F/</guid>
      <description>写在前面 问题起因 前段时间公司某个中台服务出现了延迟过高的问题,经过调查后发现,该服务的P数量远大于容器限制的4c,大量的CPU时间用来做找G</description>
    </item>
    
    <item>
      <title>一条sql的执行过程</title>
      <link>http://weiwenchong.github.io/post/%E4%B8%80%E6%9D%A1sql%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Fri, 10 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/%E4%B8%80%E6%9D%A1sql%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</guid>
      <description>Mysql基础架构 概览 Mysql主要分为Server层和存储引擎层. Server:包括连接器、查询缓存、分析器、优化器、执行器等,所有跨存储</description>
    </item>
    
    <item>
      <title>内核态与用户态</title>
      <link>http://weiwenchong.github.io/post/%E5%86%85%E6%A0%B8%E6%80%81%E5%92%8C%E7%94%A8%E6%88%B7%E6%80%81/</link>
      <pubDate>Tue, 07 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/%E5%86%85%E6%A0%B8%E6%80%81%E5%92%8C%E7%94%A8%E6%88%B7%E6%80%81/</guid>
      <description>内核态和用户态是什么 linux架构图 系统调用将linux分为用户态和内核态,或者说是内核空间和用户空间. 从功能上来讲: 内核态: 控制计算机的硬</description>
    </item>
    
    <item>
      <title>简单聊聊TiDB</title>
      <link>http://weiwenchong.github.io/post/tidb%E4%B8%8Emysql/</link>
      <pubDate>Tue, 07 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/tidb%E4%B8%8Emysql/</guid>
      <description>TiDB PingCAP公司开发的开源分布式数据库,兼容Mysql,具备强一致性和高可用性.最主要的优势是支持无限水平扩展,支持ACID事务.结合了</description>
    </item>
    
    <item>
      <title>kafka</title>
      <link>http://weiwenchong.github.io/post/kafka/</link>
      <pubDate>Sun, 15 Aug 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/kafka/</guid>
      <description>kafka 功能 解耦. 可恢复性. 系统的一部分组件失效,例如一个处理消息的进程挂掉,不会影响整个系统,加入队列的消息仍可以在系统恢复后被处理. 缓冲. 控制</description>
    </item>
    
    <item>
      <title>Mysql回表</title>
      <link>http://weiwenchong.github.io/post/%E5%9B%9E%E8%A1%A8/</link>
      <pubDate>Tue, 13 Jul 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/%E5%9B%9E%E8%A1%A8/</guid>
      <description>Mysql回表 InnoDB聚集索引和普通索引 聚集索引:InnoDB聚集索引的叶子节点存储行记录,一张表有且只有一个聚集索引,一般为主. 所以主</description>
    </item>
    
    <item>
      <title>redis基础知识</title>
      <link>http://weiwenchong.github.io/post/redis/</link>
      <pubDate>Mon, 14 Jun 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/redis/</guid>
      <description>写在前面 推荐书籍: 《redis设计与实现》 推荐博客: https://www.cnblogs.com/hunternet/tag/Redis/ (其实就是复述了一遍书,可以用这个博客实现对书的检索功能) 数据类型 数据类型 底层实现 列表</description>
    </item>
    
    <item>
      <title>网络基础知识</title>
      <link>http://weiwenchong.github.io/post/net/</link>
      <pubDate>Sat, 10 Apr 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/net/</guid>
      <description>TCP OSI七层模型 应用层:为应用程序提供网络服务. 表示层:数据格式转换、数据压缩和数据加密. 会话层:建立、断开和维护通信链接. 传输层:为上层协</description>
    </item>
    
    <item>
      <title>html基础</title>
      <link>http://weiwenchong.github.io/post/html/</link>
      <pubDate>Fri, 15 Jan 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/html/</guid>
      <description>html 超文本标记语言, 是一套标记标签, 使用标记标签来描述网页 标签 使用尖括号包围标签类型, 一般成对出现, 简单实例如下 &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;第一个</description>
    </item>
    
    <item>
      <title>JavaScript基础(烂尾了没学完)</title>
      <link>http://weiwenchong.github.io/post/javascript/</link>
      <pubDate>Fri, 15 Jan 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/javascript/</guid>
      <description>JavaScript基础知识 1.使用 html中,JavaScript代码必须位于之间 &amp;lt;p id=&amp;#34;demo&amp;#34;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;script&amp;gt; document.getElementById(&amp;#34;demo&amp;#34;).innerHTML=&amp;#34;test&amp;#34; &amp;lt;/script&amp;gt; 将JavaScript函数代码块放在代码块中 s</description>
    </item>
    
  </channel>
</rss>
