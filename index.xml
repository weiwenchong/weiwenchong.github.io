<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wenchong Blog</title>
    <link>http://weiwenchong.github.io/</link>
    <description>Recent content on Wenchong Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Sep 2021 20:50:00 +0000</lastBuildDate><atom:link href="http://weiwenchong.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang基础库 sync.Pool</title>
      <link>http://weiwenchong.github.io/post/sync_pool/</link>
      <pubDate>Tue, 14 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/sync_pool/</guid>
      <description>golang 基础库sync.Pool 使用姿势 认识下sync.Pool type Pool struct { ... New func() interface{} } func (p *Pool) Put(x interface{}) { ... } func (p *Pool) Get() interface{} { ... } sync.Pool暴露了以上三个</description>
    </item>
    
    <item>
      <title>redis基础知识</title>
      <link>http://weiwenchong.github.io/post/redis/</link>
      <pubDate>Tue, 14 Sep 2021 20:50:00 +0000</pubDate>
      
      <guid>http://weiwenchong.github.io/post/redis/</guid>
      <description>写在前面 推荐书籍: 《redis设计与实现》 推荐博客: https://www.cnblogs.com/hunternet/tag/Redis/ (其实就是复述了一遍书,可以用这个博客实现对书的检索功能) 数据类型 数据类型 底层实现 列表</description>
    </item>
    
  </channel>
</rss>
